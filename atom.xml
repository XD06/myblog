<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未曾停下脚步</title>
  
  <subtitle>个人博客</subtitle>
  <link href="https://xd06.github.io/atom.xml" rel="self"/>
  
  <link href="https://xd06.github.io/"/>
  <updated>2025-02-16T06:36:57.075Z</updated>
  <id>https://xd06.github.io/</id>
  
  <author>
    <name>DSK</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>白桃露露</title>
    <link href="https://xd06.github.io/2025/02/16/%E7%99%BD%E6%A1%83%E9%9C%B2%E9%9C%B2/"/>
    <id>https://xd06.github.io/2025/02/16/%E7%99%BD%E6%A1%83%E9%9C%B2%E9%9C%B2/</id>
    <published>2025-02-16T05:29:13.000Z</published>
    <updated>2025-02-16T06:36:57.075Z</updated>
    
    <content type="html"><![CDATA[<h1 id="福利姬：白桃露露"><a href="#福利姬：白桃露露" class="headerlink" title="福利姬：白桃露露"></a>福利姬：白桃露露</h1><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739683035808.9kgb1pxbrn.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739683013678.4ub23b5pe9.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739682983165.45t4we30s.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739683002671.2rv9f974cu.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739683049094.60udbwulzq.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/112487101153303.58hhu6e09l.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1739683071079.b910c08gn.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/112487101153304.5xare71ja1.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/112487101153306.4n7u7vjjyy.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1174952708560422-1536x653.969vaup0ws.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1174952708560423-1536x705.9rjix5jh7i.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1174952708560428-1536x870.8ojtm9nnbz.jpg" alt></p><p><img data-src="https://jsd.cdn.zzko.cn/gh/XD06/picx-images-hosting@master/sex/1174952708560431-1536x870.6ikf0hvzkw.jpg" alt></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;福利姬：白桃露露&quot;&gt;&lt;a href=&quot;#福利姬：白桃露露&quot; class=&quot;headerlink&quot; title=&quot;福利姬：白桃露露&quot;&gt;&lt;/a&gt;福利姬：白桃露露&lt;/h1&gt;&lt;p&gt;&lt;img data-src=&quot;https://jsd.cdn.zzko.cn/gh/XD06</summary>
      
    
    
    
    <category term="福利" scheme="https://xd06.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="福利" scheme="https://xd06.github.io/tags/%E7%A6%8F%E5%88%A9/"/>
    
  </entry>
  
  <entry>
    <title>test_githubaction</title>
    <link href="https://xd06.github.io/2025/02/16/test/"/>
    <id>https://xd06.github.io/2025/02/16/test/</id>
    <published>2025-02-15T16:00:00.000Z</published>
    <updated>2025-02-16T05:08:33.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-a-test"><a href="#This-is-a-test" class="headerlink" title="This is a test"></a><center>This is a test</center></h1><p>name : 黄金二逼王</p><p><img data-src="1/sex.png" alt="imge"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;This-is-a-test&quot;&gt;&lt;a href=&quot;#This-is-a-test&quot; class=&quot;headerlink&quot; title=&quot;This is a test&quot;&gt;&lt;/a&gt;&lt;center&gt;This is a test&lt;/center&gt;&lt;/h1&gt;&lt;p&gt;name </summary>
      
    
    
    
    <category term="福利" scheme="https://xd06.github.io/categories/%E7%A6%8F%E5%88%A9/"/>
    
    
    <category term="test" scheme="https://xd06.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>咒术回战</title>
    <link href="https://xd06.github.io/2022/10/09/%E5%92%92%E6%9C%AF%E5%9B%9E%E6%88%98/"/>
    <id>https://xd06.github.io/2022/10/09/%E5%92%92%E6%9C%AF%E5%9B%9E%E6%88%98/</id>
    <published>2022-10-08T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="咒术回战"><a href="#咒术回战" class="headerlink" title="咒术回战"></a>咒术回战</h1><h2 id="“你要在众人的簇拥下死去”"><a href="#“你要在众人的簇拥下死去”" class="headerlink" title="“你要在众人的簇拥下死去”"></a>“你要在众人的簇拥下死去”</h2><p><img data-src="https://images7.alphacoders.com/114/thumbbig-1149849.webp" alt><br><span id="more"></span><br><img data-src="https://images6.alphacoders.com/114/thumbbig-1144163.webp" alt></p><p><img data-src="https://images5.alphacoders.com/114/thumbbig-1144131.webp" alt></p><p><img data-src="https://images8.alphacoders.com/114/thumbbig-1144281.webp" alt></p><p><img data-src="https://i0.hdslb.com/bfs/article/8f3b4c762cd7d76071b1298f9bf2417bd7af5c82.jpg@942w_531h_progressive.webp" alt></p><p><img data-src="https://pic3.zhimg.com/80/v2-6ca40587b3ae7bd2b2fa9d9d2ea6beb6_1440w.webp" alt></p><p><img data-src="https://i0.hdslb.com/bfs/article/bfabf94d41c4d9f29d794f87d23c67ea51892dd1.jpg@942w_636h_progressive.webp" alt></p><p><img data-src="https://i0.hdslb.com/bfs/article/83bee30ebc64f0cc14c02b730ce0cf53b909f662.jpg@942w_1332h_progressive.webp" alt></p><p><img data-src="https://picx.zhimg.com/80/v2-474c7061d39c762e3dd2b0ad2bd56556_1440w.webp?source=1940ef5c" alt></p><p><img data-src="https://pic1.zhimg.com/80/v2-505979e0f1f2fe2609f6e783015495f3_1440w.webp?source=1940ef5c" alt></p><p><img data-src="https://pic1.zhimg.com/80/v2-f762fceef949ae3e5a035cb997421fc5_1440w.webp?source=1940ef5c" alt></p><p><img data-src="https://picx.zhimg.com/80/v2-f634b9498a21c88a88d6ee759dd5ed3f_1440w.webp?source=1940ef5c" alt></p><p><img data-src="https://pica.zhimg.com/80/v2-44266576fa377a621660ebe3acc6e154_1440w.webp?source=1940ef5c" alt></p><p><img data-src="https://i0.hdslb.com/bfs/article/bfbafb41012211424c1056bf31bdde8ecb28a789.jpg@942w_progressive.webp" alt></p><p><img data-src="https://i.bobopic.com/small/88378485.jpg" alt></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;咒术回战&quot;&gt;&lt;a href=&quot;#咒术回战&quot; class=&quot;headerlink&quot; title=&quot;咒术回战&quot;&gt;&lt;/a&gt;咒术回战&lt;/h1&gt;&lt;h2 id=&quot;“你要在众人的簇拥下死去”&quot;&gt;&lt;a href=&quot;#“你要在众人的簇拥下死去”&quot; class=&quot;headerlink&quot; title=&quot;“你要在众人的簇拥下死去”&quot;&gt;&lt;/a&gt;“你要在众人的簇拥下死去”&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://images7.alphacoders.com/114/thumbbig-1149849.webp&quot; alt&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="壁纸" scheme="https://xd06.github.io/categories/%E5%A3%81%E7%BA%B8/"/>
    
    
    <category term="养眼" scheme="https://xd06.github.io/tags/%E5%85%BB%E7%9C%BC/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-网络层(一)9-6</title>
    <link href="https://xd06.github.io/2022/09/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82(%E4%B8%80)9-6/"/>
    <id>https://xd06.github.io/2022/09/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82(%E4%B8%80)9-6/</id>
    <published>2022-09-05T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络层的概述"><a href="#网络层的概述" class="headerlink" title="网络层的概述"></a>网络层的概述</h2><ul><li>网络层的主要任务是实现网络互连，进而实现数据包在各网络之间的传播。</li><li>实现网络层的任务，需要解决几个主要任务：<ol><li>向运输层提供怎样的的服务（可靠或不可靠传输）</li><li>网络层寻址问题</li><li>路由选择问题<span id="more"></span></li></ol></li></ul><ul><li>因特网（Internet）是全世界用户数量最多的互联网，使用TCP/IP协议栈</li><li>由于TCP/IP协议栈的网络层使用网际协议IP，它是整个协议栈的核心协议。在TCP/IP协议栈中网络层常称为网际层。</li></ul><h2 id="网际协议IP"><a href="#网际协议IP" class="headerlink" title="网际协议IP"></a>网际协议IP</h2><ul><li>网际协议（Internet Protocol，IP）是TCP/IP体系结构网际层中的核心协议。</li><li>网际协议IP，传输控制协议TCP、TCP/IP体系结构是由“因特网之父”Robert Kahn 和Vint Cerf 二人共同研究，第一个版本（1974年5月）</li></ul><h2 id="异构网络互连"><a href="#异构网络互连" class="headerlink" title="异构网络互连"></a>异构网络互连</h2><ul><li>将一些网络的拓扑、性能以及所使用的网络协议都不尽相同的网络进行互连，让ip网上的主机进行通信时，就好像在一个单一的网络上通信一样，它们看不见互连的各网络的具体的细节。</li></ul><h2 id="IPv4地址的概述"><a href="#IPv4地址的概述" class="headerlink" title="IPv4地址的概述"></a>IPv4地址的概述</h2><ul><li>32比特的IPv4地址采用点分十进制的表示方法</li><li>8位无符号二进制整数转十进制数。（按权展开）</li><li>十进制正整数转8位无符号二进制数。（使用除2取余法）</li></ul><h2 id="分类编址的IPv4地址"><a href="#分类编址的IPv4地址" class="headerlink" title="分类编址的IPv4地址"></a>分类编址的IPv4地址</h2><p>A类地址：</p><p>B类地址：</p><p>后面的C，D类地址与B类相似，网络号和主机号的位数不同，最小网络号和最小网络号、可指派的网络数量、每个网络可分配的IP地址数量等参考B类的求解方法。</p><p>例题练习：</p><h2 id="划分子网的IPv4地址"><a href="#划分子网的IPv4地址" class="headerlink" title="划分子网的IPv4地址"></a>划分子网的IPv4地址</h2><p>举例：</p><p>真题：</p><ul><li>默认的子网掩码是在未划分子网的情况下使用的子网掩码<ul><li>是将各类地址的网络号比特位设为全1，主机号比特位设为全0</li></ul></li></ul><h2 id="无分类编址的IPv4地址"><a href="#无分类编址的IPv4地址" class="headerlink" title="无分类编址的IPv4地址"></a>无分类编址的IPv4地址</h2><ul><li>划分子网在一定程度上缓解了因特网发展所遇到的困难，但因特网的IP地址正在加速消耗，面临着消耗殆尽的威胁。</li><li>因特网工程任务组IETF又提出采用无分类编址的方法来解决IP地址紧张的问题。</li><li>在1993年，IETF发布了**无分类域间路由选择CIDR（Classless Inter-Domain Routing）的RFC文档：<ul><li>CIDR消除了传统的的A类、B类、C类、D类地址，以及子网划分的概念</li><li>CIDR可以更加有效的分配IPv4的地址的空间，并且可以在新的IPv6使用之前允许因特网的规模继续增长。</li></ul></li></ul><h3 id="路由聚合（构建超网）："><a href="#路由聚合（构建超网）：" class="headerlink" title="路由聚合（构建超网）："></a>路由聚合（构建超网）：</h3><p>例题：</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;网络层的概述&quot;&gt;&lt;a href=&quot;#网络层的概述&quot; class=&quot;headerlink&quot; title=&quot;网络层的概述&quot;&gt;&lt;/a&gt;网络层的概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;网络层的主要任务是实现网络互连，进而实现数据包在各网络之间的传播。&lt;/li&gt;
&lt;li&gt;实现网络层的任务，需要解决几个主要任务：&lt;ol&gt;
&lt;li&gt;向运输层提供怎样的的服务（可靠或不可靠传输）&lt;/li&gt;
&lt;li&gt;网络层寻址问题&lt;/li&gt;
&lt;li&gt;路由选择问题&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路层(七)9-5</title>
    <link href="https://xd06.github.io/2022/09/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82(%E4%B8%83)9-5/"/>
    <id>https://xd06.github.io/2022/09/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82(%E4%B8%83)9-5/</id>
    <published>2022-09-05T14:22:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="以太网的发展"><a href="#以太网的发展" class="headerlink" title="以太网的发展"></a>以太网的发展</h2><ul><li>100BASE-T以太网是指在双绞线上传输的基带信号的速率为100Mb/s的以太网，也称为快速以太网。</li></ul><span id="more"></span><ul><li><p>“100”指的是速率，“BASE”指的是基带信号，“T”指的是传输媒体双绞线。</p></li><li><p>仍然使用IEEE802.3的帧格式和CSMA/CD协议，以太网的最小帧长不变，仍然为64字节。</p><ul><li>网段最大电缆长度从1000m缩短到100m</li><li>争用期缩短为5.12微秒</li><li>帧间最小间隔缩短为0.96微秒</li></ul></li><li><p>还可以使用以太网交换机来提供比集线器更好的服务质量，即在全双工方式下无碰撞工作</p></li><li><p>吉比特以太网：</p><ul><li>速率为1000Mb/s（1Gb/s）</li><li>使用IEEE 802.3的帧格式</li><li>支持半双工方式（使用CSMA/CD协议）和全双工方式（不使用CSMA/CD）</li><li>最小帧长仍表示64字节。（使用载波延伸的方法，讲争用期增大到512字节的发送时间而保持最小帧长为64字节）<ul><li>只要发送的MAC帧的长度不足512字节时，就在MAC帧尾部填充一些特殊字符，使MAC的长度增大到512字节。</li></ul></li></ul></li><li><p>10吉比特以太网：</p><ul><li>将以太网从局域网范围（校园网或企业网）扩展到城域网与广域网，成为城域网和广域网的主干网的主流技术之一。</li><li>速率为10Gb/s</li><li>使用IEEE 802.3标准的帧格式，保留IEEE 802.3标准对以太网最小帧长和最大帧长的规定。方便能与较低速率的以太网通信。</li><li>只工作在全双工方式不存在争用媒体的功能。</li></ul></li><li>40/100吉比特以太网：<ul><li>40Gb/s主要用于计算应用</li><li>100Gb/s主要用于汇聚应用</li><li>IEEE 802.3ba标准只工作在全双工方式（不使用CSMA/CD），仍使用IEEE 802.3标准的帧格式并遵守最小和最大帧长的规定。</li></ul></li></ul><h2 id="802-11无线局域网的组成"><a href="#802-11无线局域网的组成" class="headerlink" title="802.11无线局域网的组成"></a>802.11无线局域网的组成</h2><ul><li>无线局域网（Wireless Local Area Network，WLAN）自20世纪80年代末逐步进入市场，IEEE在1997年制定出无线局域网的协议标准802.11,802.11无线局域网目前是应用最广泛的无线局域网之一，</li><li>802.11无线局域网分类：<ul><li>有固定基础设施的</li><li>无固定基础设施的</li></ul></li></ul><ul><li>在本BSS内各站点之间的通信以及本BSS外的站点之间的通信，都必须经过本BSS内的AP进行转发。</li></ul><p>802.11无线局域网的ad hoc模式允许网络中的站点在其通信范围内直接通信，也就是支持站点间的单跳通信，而标准中并没有包括多跳路由功能，所以，802.11无线局域网的ad hoc模式应用较少。</p><h2 id="802-11无线局域网的物理层"><a href="#802-11无线局域网的物理层" class="headerlink" title="802.11无线局域网的物理层"></a>802.11无线局域网的物理层</h2><ul><li>它的物理层十分的复杂，依据工作的频段，调制方式，传输速率等，可分为多种物理层标准。</li><li>802.11无线网卡一般会做成多模的，以便能适应多种的物理层标准。</li><li>无线局域网最初还使用红外技术和跳频技术（跳频技术的发明人-海蒂-拉玛又称为”WI-FI之母“，跳频技术为CDMA和WI-FI等无线技术通信技术奠定基础，）</li></ul><h2 id="802-11无线局域网使用CSMA-CA协议的原因"><a href="#802-11无线局域网使用CSMA-CA协议的原因" class="headerlink" title="802.11无线局域网使用CSMA/CA协议的原因"></a>802.11无线局域网使用CSMA/CA协议的原因</h2><ul><li>因为传输介质的不同，802.11无线局域网不能简单的使用共享以太网使用的CSMA/CD协议，而是采用了一种名为CSMA/CA的协议，就是载波监听多址接入和碰撞避免（Carrier Sense Multiple Access/Collsion Avoidance，CSMA/CA）</li><li>CSMA/CA仍采用CSMA/CD协议中的CSMA，以”先听后说“的方式来减少碰撞，将”碰撞检测CD“改为了”碰撞检测CA“</li></ul><h2 id="CSMA-CA协议的基本工作原理"><a href="#CSMA-CA协议的基本工作原理" class="headerlink" title="CSMA/CA协议的基本工作原理"></a>CSMA/CA协议的基本工作原理</h2><p>等待时间间隔DIFS间隔是考虑到可能有其他站有高优先级的帧要发送</p><p>短帧间间隔（Short Interframe Space，SIFS）的长度为28微秒，是最短的帧间间隔，用来分隔属于一次对话的各帧，使用SIFS的帧类型有ACK帧。CTS帧等。</p><h2 id="802-11无线局域网的MAC帧"><a href="#802-11无线局域网的MAC帧" class="headerlink" title="802.11无线局域网的MAC帧"></a>802.11无线局域网的MAC帧</h2><ul><li>其中的持续期字段用于实现CSMA/CD的虚拟载波监听和信道预约机制，在数据帧，RTS帧和CTS帧中用该字段指出将要持续占用信道的时长。</li><li>序号控制：用来实现802.11的可靠传输，对数据帧进行编号。</li><li>地址字段的内容和使用情况取决于帧控制字段中的”去往DS“（倒分配系统）和”来自DS“（分配系统）这两个字段的值</li></ul><p>思维导图：</p><p><a href="https://kdocs.cn/l/cgV0rfS0qZEA">第3章 数据链路层 课程小结（思维导图）-1</a></p><p><a href="https://kdocs.cn/l/ciOEeLV6ffuJ">第3章 数据链路层 课程小结（思维导图）-2</a></p><p><a href="https://kdocs.cn/l/cnRBS8NFgTll">第3章 数据链路层 课程小结（思维导图）-3</a></p><p>在线习题网址：</p><p><a href="https://kdocs.cn/l/cl60fYfO1qZe">第3章 数据链路层  习题（第1部分）</a></p><p><a href="https://kdocs.cn/l/cenjHDfYLe95">第3章 数据链路层  习题（第2部分）</a></p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;以太网的发展&quot;&gt;&lt;a href=&quot;#以太网的发展&quot; class=&quot;headerlink&quot; title=&quot;以太网的发展&quot;&gt;&lt;/a&gt;以太网的发展&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;100BASE-T以太网是指在双绞线上传输的基带信号的速率为100Mb/s的以太网，也称为快速以太网。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据层(六)9-4</title>
    <link href="https://xd06.github.io/2022/09/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E5%85%AD)/"/>
    <id>https://xd06.github.io/2022/09/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E5%85%AD)/</id>
    <published>2022-09-03T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="共享式以太网与交换式以太网的对比"><a href="#共享式以太网与交换式以太网的对比" class="headerlink" title="共享式以太网与交换式以太网的对比"></a>共享式以太网与交换式以太网的对比</h2><ul><li><p>集线器和交换机在广播帧的转发效果，看起来是相同的，但是原理不同。</p></li><li><p>对于集线器来说，当它收到单播帧或者是广播帧，它所做的是向除接收该帧的接口外的接口进行转发出去，而交换机工作在数据链路层，识别帧的结构，进行明确转发或盲目或丢弃该帧。</p></li><li>多对主机同时通信，对于集线器的以太网可能会发生信号的碰撞，而交换式以太网中的交换机对收到的帧存储转发，能够实现多对接口的高速并行交换，不会发生信号的碰撞。</li><li>使用集线式以太网会扩大广播域，也扩大了碰撞域。对于交换式以太网会扩大广播域，但是原本的碰撞域还是独立。</li></ul><span id="more"></span><p><strong>例题</strong></p><h2 id="以太网的MAC帧格式"><a href="#以太网的MAC帧格式" class="headerlink" title="以太网的MAC帧格式"></a>以太网的MAC帧格式</h2><ul><li>DIX Ethernet V2 的帧格式和IEEE 802.3的帧格式差别很小，仅“类型”字段有差别。</li></ul><ul><li><p>类型中的值是来指明数据载荷中的内容是由上一层的哪个协议封装的，以便将收到的MAC地址的数据载荷上交给上一层的这个协议。</p></li><li><p>接收方可能受到无效的MAC帧包括以下几种：</p><ol><li>MAC帧的长度不是整数个字节</li><li>通过MAC帧的FCS字段的值检测出帧有误码</li><li>MAC帧的长度不在64-1518字节之间。</li></ol></li><li>接受方收到无效的MAC地址时，就简单地将其丢弃，以太网的数据链路层没有重传机制。</li></ul><h2 id="虚拟局域网VLAN的诞生背景"><a href="#虚拟局域网VLAN的诞生背景" class="headerlink" title="虚拟局域网VLAN的诞生背景"></a>虚拟局域网VLAN的诞生背景</h2><ul><li>将多个站点通过一个或多个以太网交换机连接起来就构成了交换式以太网。这个以太网中的所有站点都属于同一个广播域。它的规模越大，广播域也越大。</li><li><p>带来的问题：</p><ol><li>广播风暴：广播风暴会浪费网络资源和各主机的CPU资源</li><li>难以管理和维护，带来潜在的安全问题。</li></ol></li><li><p>频繁使用广播的的协议有：</p><ul><li><p>TCP/IP协议中：地址解析协议ARP、路由信息协议RIPv1、动态主机配置协议DHCP</p></li><li><p>NeBEUI：Windows下使用的广播协议</p></li><li>IPX/SPX：Novell网络的协议栈</li><li>Apple Talk： Apple公司的网络协议栈</li></ul></li><li><p>分割广播域的方法：</p><ul><li>使用路由器可以隔离广播域</li></ul></li></ul><h2 id="虚拟局域网VLAN概述"><a href="#虚拟局域网VLAN概述" class="headerlink" title="虚拟局域网VLAN概述"></a>虚拟局域网VLAN概述</h2><ul><li>虚拟局域网（Virtual Local Area Network ,VLAN）是一种将局域网内的站点划分成与物理位置无关的逻辑组的技术，一个逻辑组就是一个VLAN。VLAN中各站点具有某些共同的应用的需求。</li><li>同一个VLAN的站点之间可以直接进行通信，而不同的VLAN的站点之间不能直接通信。</li></ul><p><strong>注：</strong> 虚拟局域网VLAN并不是一种新型网络，它只是局域网能够给用户提供的一种服务。</p><h2 id="虚拟局域网的VLAN的实现机制-——-IEEE-802-1Q帧"><a href="#虚拟局域网的VLAN的实现机制-——-IEEE-802-1Q帧" class="headerlink" title="虚拟局域网的VLAN的实现机制 ——-IEEE 802.1Q帧"></a>虚拟局域网的VLAN的实现机制 ——-IEEE 802.1Q帧</h2><ul><li>根据接口在接受帧和发送帧时对帧的处理方式的不同，以及接口连接对象的不同，以太网交换机的接口类型一般为Access和Trunk两种。</li><li>当以太网交换机启动后，之前没有进行设置，它的各接口默认为Access，缺省VLAN ID为1，即各接口默认属于VLAN1（每个接口有且只有一个缺省VLAN ID）.</li></ul><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;共享式以太网与交换式以太网的对比&quot;&gt;&lt;a href=&quot;#共享式以太网与交换式以太网的对比&quot; class=&quot;headerlink&quot; title=&quot;共享式以太网与交换式以太网的对比&quot;&gt;&lt;/a&gt;共享式以太网与交换式以太网的对比&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;集线器和交换机在广播帧的转发效果，看起来是相同的，但是原理不同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于集线器来说，当它收到单播帧或者是广播帧，它所做的是向除接收该帧的接口外的接口进行转发出去，而交换机工作在数据链路层，识别帧的结构，进行明确转发或盲目或丢弃该帧。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;多对主机同时通信，对于集线器的以太网可能会发生信号的碰撞，而交换式以太网中的交换机对收到的帧存储转发，能够实现多对接口的高速并行交换，不会发生信号的碰撞。&lt;/li&gt;
&lt;li&gt;使用集线式以太网会扩大广播域，也扩大了碰撞域。对于交换式以太网会扩大广播域，但是原本的碰撞域还是独立。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>分享壁纸（三）</title>
    <link href="https://xd06.github.io/2022/09/03/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%B8%89)/"/>
    <id>https://xd06.github.io/2022/09/03/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%B8%89)/</id>
    <published>2022-09-03T03:22:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人物-二"><a href="#人物-二" class="headerlink" title="人物(二)"></a>人物(二)</h2><p><img data-src="https://pic.netbian.com/uploads/allimg/220116/222845-164234332589a9.jpg" alt></p><span id="more"></span><p><img data-src="https://pic.3gbizhi.com/2021/1105/thumb_1680_0_20211105063648584.jpg" alt></p><p><img data-src="https://pic.netbian.com/uploads/allimg/220814/231950-1660490390ca06.jpg" style="zoom:70%;"></p><p><img data-src="https://pic.netbian.com/uploads/allimg/220618/002627-1655483187f639.jpg" alt></p><p><img data-src="https://pic.netbian.com/uploads/allimg/220629/224839-1656514119b359.jpg" alt></p><p><img data-src="https://pic.netbian.com/uploads/allimg/220902/224030-1662129630e481.jpg" alt><br><img data-src="https://pic.3gbizhi.com/2020/1102/thumb_1680_0_20201102115703732.jpg" alt></p><p><img data-src="https://www.cgwallpapers.com/img_script/wallpaper_dir/img.php?src=wallpaper_ruan_jia_19_2560x1440.jpg&amp;height=450&amp;width=800&amp;fill-to-fit&amp;sharpen" alt></p><p><img data-src="https://www.cgwallpapers.com/img_script/wallpaper_dir/img.php?src=wallpaper_wlop__19_2560x1440.jpg&amp;height=450&amp;width=800&amp;fill-to-fit&amp;sharpen" alt></p><p><img data-src="https://www.cgwallpapers.com/img_script/wallpaper_dir/img.php?src=wallpaper_chen_bo_30_2560x1440.jpg&amp;height=450&amp;width=800&amp;fill-to-fit&amp;sharpen" alt></p><h2 id="注：（以上图来自电脑桌面壁纸大全3g壁纸-和cgwallpapers"><a href="#注：（以上图来自电脑桌面壁纸大全3g壁纸-和cgwallpapers" class="headerlink" title="注：（以上图来自电脑桌面壁纸大全3g壁纸 和cgwallpapers)"></a>注：（以上图来自<a href="https://desk.3gbizhi.com/">电脑桌面壁纸大全3g壁纸 </a>和<a href="https://www.cgwallpapers.com/">cgwallpapers</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;人物-二&quot;&gt;&lt;a href=&quot;#人物-二&quot; class=&quot;headerlink&quot; title=&quot;人物(二)&quot;&gt;&lt;/a&gt;人物(二)&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://pic.netbian.com/uploads/allimg/220116/222845-164234332589a9.jpg&quot; alt&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="壁纸" scheme="https://xd06.github.io/categories/%E5%A3%81%E7%BA%B8/"/>
    
    
    <category term="养眼" scheme="https://xd06.github.io/tags/%E5%85%BB%E7%9C%BC/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路(五)9-3</title>
    <link href="https://xd06.github.io/2022/09/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%BA%94)/"/>
    <id>https://xd06.github.io/2022/09/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%BA%94)/</id>
    <published>2022-09-02T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在物理层扩展以太网"><a href="#在物理层扩展以太网" class="headerlink" title="在物理层扩展以太网"></a>在物理层扩展以太网</h1><h2 id="扩展站点与集线器之间的距离"><a href="#扩展站点与集线器之间的距离" class="headerlink" title="扩展站点与集线器之间的距离"></a>扩展站点与集线器之间的距离</h2><ul><li>共享式以太网中两站点之间不能太远，不然信号会衰减到CSMA/CD协议无法正常工作。早期使用粗同轴电缆或细同轴电缆共享总线以太网时，为了提高网络的地理位置覆盖范围，常用的是工作在物理层的转换器。</li><li>在IEEE 802.3标准规定，两个网段可用同一个转发器连接起来，任意两个站点之间最多可以经过三个网段。<span id="more"></span></li><li>使用双绞线和集线器的10BASE-T星型（以太网中的每个站点到集线器的距离不能超过100m，两站点之间的通信距离最大不能超过200m）成为以太网的主流类型，转发器就大大减少了。</li><li>在10BASE-T星型的以太网中，可使用光纤和一对光纤调制解调器来扩展站点与集线器之间的距离。</li></ul><h2 id="扩展共享式以太网的覆盖范围和站点数量"><a href="#扩展共享式以太网的覆盖范围和站点数量" class="headerlink" title="扩展共享式以太网的覆盖范围和站点数量"></a>扩展共享式以太网的覆盖范围和站点数量</h2><ul><li>在物理层扩展的共享式以太网仍然是一个碰撞域，不能连接太多的站点，否则可能会出现大量的碰撞，导致平均吞吐量太低。</li></ul><h2 id="使用网桥在数据链路层扩展的以太网"><a href="#使用网桥在数据链路层扩展的以太网" class="headerlink" title="使用网桥在数据链路层扩展的以太网"></a>使用网桥在数据链路层扩展的以太网</h2><ul><li>网桥工作在数据链路层（包含其下的物理层），而集线器仅工作在物理层。<ul><li>网桥可以识别帧的结构</li><li>网桥可以根据帧首部中的目的MAC地址和网桥自身的帧发表来转发或丢弃所接收的帧。</li></ul></li></ul><h2 id="网桥的主要结构和基本工作原理"><a href="#网桥的主要结构和基本工作原理" class="headerlink" title="网桥的主要结构和基本工作原理"></a>网桥的主要结构和基本工作原理</h2><ul><li>转发表是网桥转发帧的依据，记录着各主机的MAC地址和自己端口对应关系，网桥根据各主机的MAC地址来查找转发表，来选择是接收或丢弃帧 </li><li>广播帧（目的MAC为FF-FF-FF-FF-FF-FF），网桥接收该广播帧，不用查找转发表，而是通过除接受该帧的接口的其他接口转发该广播帧。</li><li>网桥的接口在向其连接的网段转发帧时，会执行相应的媒体接入控制协议，对于共享式以太网就是CSMA/CD协议。</li></ul><h2 id="透明网桥的自学习和转发帧的流程"><a href="#透明网桥的自学习和转发帧的流程" class="headerlink" title="透明网桥的自学习和转发帧的流程"></a>透明网桥的自学习和转发帧的流程</h2><ul><li>网桥收到帧之后进行登记（自学习），登记的内容为帧的源MAC地址和进入网桥的接口号。</li><li>网桥根据帧的目的MAC地址和网桥的转发表对帧进行转发，有三种情况：<ol><li>明确转发：网桥知道应当从哪个接口转发帧。</li><li>盲目转发： 网桥不知道从哪个接口转发帧，只能通过通过除接受该帧的接口的其他所有接口转发该帧。</li><li>丢弃：网桥知道不应该转发该帧，直接将其丢弃。</li></ol></li></ul><p><strong>注意：</strong></p><h2 id="透明网桥的生成协议STP"><a href="#透明网桥的生成协议STP" class="headerlink" title="透明网桥的生成协议STP"></a>透明网桥的生成协议STP</h2><ul><li>为了提高以太网的可靠性，有时需要在两个以太网之间使用多个透明网桥来提供冗余链路。</li></ul><ul><li>为了避免这种情况，透明网桥使用生成树协议（Spanning Tree Protocol，STP），增加冗余链路提高网络可靠性。<ul><li>网桥之间通过交互网桥协议单元（Bridge Protocol Data Unit，BPDU），找出原网络拓扑的一个接通子集（生成树）。</li></ul></li></ul><h2 id="交换式以太网"><a href="#交换式以太网" class="headerlink" title="交换式以太网"></a>交换式以太网</h2><ul><li>网桥的接口数量很少，通常只有2-4各，一般只用连接不同的网段。</li><li>1990年面世的交换式集线器（Switching Hub），实质上是具有多个接口的网桥，常称为以太网交换机或二层交换机<ul><li>“二层”是指以太网交换机工作在数据链路层（包括物理层）</li><li>和网桥相同，交换机内部的转发表也是通过子学习算法，基于网络中各主机的通信，自动的逐步的建立。</li><li>交换机也使用生成树协议STP，来产生能够连通全网的但不产生环路的通信路径。</li></ul></li><li>使用交换机（而不使用集线器）的以太网就是交换式以太网。</li></ul><h2 id="以太网交换机"><a href="#以太网交换机" class="headerlink" title="以太网交换机"></a>以太网交换机</h2><ul><li><p>交换机的每个接口可以连接计算机，也可以连接集线器或另一个交换机。</p><ul><li>它接口当与计算机或交换机连接时，可以工作在全双工方式，可以连接多对接口，无碰撞传输数据，不用使用CSMA/CD协议。</li><li>当它的接口连接的是集线器时，该接口就只能使用CSMA/CD协议并只能工作在半双工方式。现在的网卡和交换机都能自动识别上述两种情况，自动切换相应的工作方式。</li></ul><p>交换机的速率接口多种，又10Mbps到10Gbps不等，大部分接口支持多速率自适应。</p></li></ul><p><strong>例题：</strong></p><p>【2009年题36】以太网交换机进行转发决策时使用的PDU地址是（A）</p><p>A.目的物理地址&nbsp;&nbsp;B.目的IP地址&nbsp;&nbsp;C.源物理地址&nbsp;&nbsp;D.源IP地址</p><p>解析：PDU（Protocol Data Unit）的意思是协议数据单元，它是计算机网络体系中对等实体间逻辑通信对象。</p><p>MAC地址又称为硬件地址或物理地址。请注意：不要被“物理“二字误导认为物理地址属于物理层范畴，物理地址属于数据链路层范畴。</p><ul><li><p>一般交换机都采用”存储转发“方式，为减小交换机的转发延迟，某些交换机采用了直通（Cut-Through）交换方式。</p></li><li><p>采用直通交换方式的交换机，在接受帧的同时就立即转发，不必缓存。</p></li><li>直通交换的时延非常小</li><li>直通交换不检查差错直接发送，可能将一些无效的帧发给其他的主机。</li></ul><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;在物理层扩展以太网&quot;&gt;&lt;a href=&quot;#在物理层扩展以太网&quot; class=&quot;headerlink&quot; title=&quot;在物理层扩展以太网&quot;&gt;&lt;/a&gt;在物理层扩展以太网&lt;/h1&gt;&lt;h2 id=&quot;扩展站点与集线器之间的距离&quot;&gt;&lt;a href=&quot;#扩展站点与集线器之间的距离&quot; class=&quot;headerlink&quot; title=&quot;扩展站点与集线器之间的距离&quot;&gt;&lt;/a&gt;扩展站点与集线器之间的距离&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;共享式以太网中两站点之间不能太远，不然信号会衰减到CSMA/CD协议无法正常工作。早期使用粗同轴电缆或细同轴电缆共享总线以太网时，为了提高网络的地理位置覆盖范围，常用的是工作在物理层的转换器。&lt;/li&gt;
&lt;li&gt;在IEEE 802.3标准规定，两个网段可用同一个转发器连接起来，任意两个站点之间最多可以经过三个网段。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路(四)9-2</title>
    <link href="https://xd06.github.io/2022/09/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E5%9B%9B)/"/>
    <id>https://xd06.github.io/2022/09/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E5%9B%9B)/</id>
    <published>2022-09-01T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSMA-CD协议"><a href="#CSMA-CD协议" class="headerlink" title="CSMA/CD协议"></a>CSMA/CD协议</h1><h2 id="CSMA-CD协议的基本原理"><a href="#CSMA-CD协议的基本原理" class="headerlink" title="CSMA/CD协议的基本原理"></a>CSMA/CD协议的基本原理</h2><ul><li>在以太网发展初期，将多个站点连接到一条总线上来构建共享总线以太网。</li><li>共享以太网具有天然的广播特性，即使是总线上某个站点给另一个站点发送单播帧，表示帧的信号也会沿着总线传播到总线上其他站点。在某一站点发送帧时，总线资源会被其独占，这时其他站点也发送帧，会出现信号碰撞。</li></ul><span id="more"></span><ul><li><p>为了解决上述的问题，共享以太网使用了一种专用的协议CSMA/CD，它是载波监听多址接入/碰撞检测（Carrier Sense Multiple Access Collision Detection）的英文缩写。</p></li><li><p>发送帧的站点一旦检测碰撞，除了立即停止发送帧外，还要继续发送32比特或48比特的人为干扰信号，保证有足够多的碰撞信号使所有站点都能检测出的碰撞。</p></li><li>载波监听检测到总线空闲，但总线不一定空闲。</li><li>在使用CSMA/CD协议时，由于正在发送帧的站点必须“边发送帧，边检测碰撞”，因此站点不能同时发送和接收。也就是不可能进行全双工通信，二只能进行半双工通信（双向交替通信）。</li></ul><h2 id="共享是以太网的争用期"><a href="#共享是以太网的争用期" class="headerlink" title="共享是以太网的争用期"></a>共享是以太网的争用期</h2><ul><li>站点从发送帧开始，最多经过时长2τ（即δ趋近于0）就可检测所发送的帧是否遭遇了碰撞。</li><li><p>因此，共享总线以太网的端到端往返的时间2τ被称为争用期，或者碰撞窗口。</p><ul><li>站点从发送帧开始，经过争用期2τ这段时间还没有检测到碰撞，就可以肯定这次发送不会发生碰撞。</li></ul></li><li><p>总线的长度越长（单端到端的传播时延越大），网络中的站点数量越多，发生碰撞的概率就越大。</p></li><li>10Mb/s共享是以太网（传统的以太网）规定：争用期2τ的值为512比特的发送时间，即51.2μs。</li></ul><script type="math/tex; mode=display">争用期：2τ=\dfrac{512b}{10Mb/s}=\dfrac{512b}{10\times10^6b/s}=51.2μs</script><script type="math/tex; mode=display">单程端到端传播时延τ=\dfrac{51.2μs}{2}=25.6μs</script><script type="math/tex; mode=display">假设信号的传播速率为2\times10^8m/s</script><script type="math/tex; mode=display">则总线的长度为2\times10^8m/s \times25.6μs=5120m</script><h2 id="共享式以太网的最小帧长和最大帧长"><a href="#共享式以太网的最小帧长和最大帧长" class="headerlink" title="共享式以太网的最小帧长和最大帧长"></a>共享式以太网的最小帧长和最大帧长</h2><ul><li><p>为了确保共享式以太网上每一个站点再发送完一个完整的帧之前，能够检测出是否发生了碰撞，帧的发送时延就不能少于共享总线以太网到端的往返时间，即一个争用期2τ.</p></li><li><p>对于10Mb/s的共享式以太网，其争用期为51.2μs，最小帧长为512b，即64B</p><ul><li>当某个站点发送帧时，如果帧的前64B没有遭遇碰撞，那么后续的部分也就不会遭遇碰撞，如果遭遇碰撞一定是在帧的前64B知内。所以当接收站点接收到长度小于64B的帧，就可以判定这是一个遭遇了碰撞而异常中止的无效帧。</li></ul></li></ul><p>例题：</p><h2 id="共享式以太网的退避算法"><a href="#共享式以太网的退避算法" class="headerlink" title="共享式以太网的退避算法"></a>共享式以太网的退避算法</h2><ul><li><p>使用CSMA/CD协议的共享总线以太网中，一边发送帧的站点还要一边检测碰撞，检测到后，会立即停止发送。退避一段时间后重新发送，在此协议的共享以太网各站点采用截断二进制指数退避（Truncated Binary Exponential Backoff）算法来选择退避的随机时间。</p></li><li><p>上述的算法可使重传的需要推迟的平均时间随重传次数而增大（即动态退避），来减少产生碰撞的概率。重传16次不成功时，就放弃重传并向高层报告。</p></li></ul><h2 id="共享式以太网的信道利用率"><a href="#共享式以太网的信道利用率" class="headerlink" title="共享式以太网的信道利用率"></a>共享式以太网的信道利用率</h2><script type="math/tex; mode=display">极限信道利用率 S_{max}=\dfrac{T_0}{T_0+τ}=\dfrac{1}{1+\dfrac{τ}{T_0}}=\dfrac{1}{1+a}参数a的值应尽量小，以提高信道利用率</script><script type="math/tex; mode=display">a=\dfrac{τ}{T_0}  共享式以太网端到端的距离不应太长</script><p>例题：</p><h2 id="使用集线器的共享式以太网"><a href="#使用集线器的共享式以太网" class="headerlink" title="使用集线器的共享式以太网"></a>使用集线器的共享式以太网</h2><ul><li><p>早期的以太网是使用出同轴电缆的共享式以太网，实践证明使用无源电缆线和大量机械接口的总线型以太网并不像人们想象的那么可靠。</p></li></ul><p>例题：</p><p>【2019年题34】100BaseT快速以太网的导向传输介质是（）</p><p>A.双绞线 &nbsp;&nbsp;&nbsp;B.单模光纤&nbsp;&nbsp;&nbsp;C.多模光纤&nbsp;&nbsp;&nbsp;D.同轴电缆</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSMA-CD协议&quot;&gt;&lt;a href=&quot;#CSMA-CD协议&quot; class=&quot;headerlink&quot; title=&quot;CSMA/CD协议&quot;&gt;&lt;/a&gt;CSMA/CD协议&lt;/h1&gt;&lt;h2 id=&quot;CSMA-CD协议的基本原理&quot;&gt;&lt;a href=&quot;#CSMA-CD协议的基本原理&quot; class=&quot;headerlink&quot; title=&quot;CSMA/CD协议的基本原理&quot;&gt;&lt;/a&gt;CSMA/CD协议的基本原理&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在以太网发展初期，将多个站点连接到一条总线上来构建共享总线以太网。&lt;/li&gt;
&lt;li&gt;共享以太网具有天然的广播特性，即使是总线上某个站点给另一个站点发送单播帧，表示帧的信号也会沿着总线传播到总线上其他站点。在某一站点发送帧时，总线资源会被其独占，这时其他站点也发送帧，会出现信号碰撞。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路(三)9-1</title>
    <link href="https://xd06.github.io/2022/09/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%B8%89)/"/>
    <id>https://xd06.github.io/2022/09/01/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%B8%89)/</id>
    <published>2022-08-31T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="点对点协议PPP"><a href="#点对点协议PPP" class="headerlink" title="点对点协议PPP"></a>点对点协议PPP</h2><ol><li>点对点协议PPP概述<ul><li>点对点协议（Point-to-Point Protocol,PPP）是目前使用最广泛的点对点数据链路层协议。</li><li>点对点协议PPP是因特网工程任务组（Internet Engineering Task Force,IETF）于1992年制定的，目前已经成为因特网的正式标准。</li><li>广泛应用：因特网用户通过点对点链路连接到某个ISP，进而接入因特网。此外还广泛应用于广域网路由器之间的专用线路。</li><li>协议字段为0021时为IP数据报，为C021时为LCP分组。为8021时为NCP分组。<span id="more"></span></li></ul></li></ol><ol><li>PPP的帧格式</li></ol><ol><li>PPP帧的透明传输</li></ol><ul><li>面向字节的异步传输链路使用字节填充来实现透明传输</li></ul><ol><li>PPP帧的差错检测</li></ol><ul><li>接收方每收到一个ppp帧，就进行CRC检验。若CRC检验正确，就收下这个帧，否则，就丢弃这个帧，使用PPP的数据链路层，向上提供是不可靠数据传输服务。</li></ul><ol><li>PPP的工作状态</li></ol><h2 id="共享式以太网"><a href="#共享式以太网" class="headerlink" title="共享式以太网"></a>共享式以太网</h2><ul><li>以太网（Ethernet-1975年）以曾经被假想的电磁波传播介质-以太（Ether）命名</li><li>以太网最初采用无源电缆（不包含电源线）作为共享总线来传输帧，属于几基带总线局域网，传输速率为2.94Mb/s</li><li>以太网已经从传统式的共享式发展成了交换式以太网，传输速率提高到了100Mb/s、1Gb/s甚至10Gb/s。</li></ul><h2 id="网络适配器和MAC地址"><a href="#网络适配器和MAC地址" class="headerlink" title="网络适配器和MAC地址"></a>网络适配器和MAC地址</h2><ol><li><p>网络适配器</p><ul><li>要将计算机连接到以太网，需要使用相应的网络适配器（Adapter），网络适配器一般简称为“网卡”。</li><li>网卡与CPU之间的通信，一般通过IO总线以并行传输方式进行的。</li><li>网卡与外部以太网（局域网）之间的通信，一般是通过传输媒体（同轴电缆、双绞线、光纤）以串行的方式</li><li>网卡除了实现物理层和数据链路层的功能，还有就是并行传输和串行传输的转换。，网卡的核心芯片中会包含用于缓存数据的存储器，是因为网络的传输速率和计算机内部总线上的传输速率并不相同。</li><li>网卡正常之外，还需要在计算机的操作系统中安装驱动程序，她负责驱动网卡发送和接受帧。</li></ul></li></ol><ol><li>MAC地址</li></ol><ul><li><p>一般情况下，普通用户计算机中往往会包含两块网卡</p><ul><li>一块是用于接入有线局域网的以太网卡</li><li>一块是用于介入无线局域网的Wi-Fi网卡</li></ul></li><li><p>每块网卡都有一个全球唯一的MAC地址</p></li><li>交换机和路由器往往具有更多的网络接口，所以会有更多的MAC地址。（MAC地址是对网络上各接口的唯一标识，而不是对网络上各设备的唯一标识）</li></ul><ul><li><p>MAC地址的发送顺序</p><ul><li>字节发送顺序：第1字节——&gt; 第六字节</li><li>字节内的比特发送顺序：b0——&gt; b7</li></ul></li><li><p>单播MAC地址：</p></li></ul><ul><li>广播MAC地址与其上一样。</li></ul><p>注：全球单播MAC地址如同个人身份证号一样，具有唯一性，与用户的个人信息相连结，应该尽量确保自己的全球单播MAC地址不被泄露，目前大多数移动设备采用随机MAC技术。</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;点对点协议PPP&quot;&gt;&lt;a href=&quot;#点对点协议PPP&quot; class=&quot;headerlink&quot; title=&quot;点对点协议PPP&quot;&gt;&lt;/a&gt;点对点协议PPP&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;点对点协议PPP概述&lt;ul&gt;
&lt;li&gt;点对点协议（Point-to-Point Protocol,PPP）是目前使用最广泛的点对点数据链路层协议。&lt;/li&gt;
&lt;li&gt;点对点协议PPP是因特网工程任务组（Internet Engineering Task Force,IETF）于1992年制定的，目前已经成为因特网的正式标准。&lt;/li&gt;
&lt;li&gt;广泛应用：因特网用户通过点对点链路连接到某个ISP，进而接入因特网。此外还广泛应用于广域网路由器之间的专用线路。&lt;/li&gt;
&lt;li&gt;协议字段为0021时为IP数据报，为C021时为LCP分组。为8021时为NCP分组。&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>分享壁纸（二）</title>
    <link href="https://xd06.github.io/2022/08/31/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%BA%8C)/"/>
    <id>https://xd06.github.io/2022/08/31/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%BA%8C)/</id>
    <published>2022-08-31T12:22:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人物"><a href="#人物" class="headerlink" title="人物"></a>人物</h2><p><img data-src="https://w.wallhaven.cc/full/j3/wallhaven-j3mk8y.jpg" alt></p><span id="more"></span><p><img data-src="https://w.wallhaven.cc/full/8o/wallhaven-8ozl91.png" style="zoom:70%;"></p><p><img data-src="https://w.wallhaven.cc/full/v9/wallhaven-v9wr9m.jpg" style="zoom:70%;"></p><p><img data-src="https://w.wallhaven.cc/full/72/wallhaven-72yo3e.jpg" style="zoom:70%;"></p><p><img data-src="https://w.wallhaven.cc/full/z8/wallhaven-z8lpww.jpg" alt></p><p><img data-src="https://w.wallhaven.cc/full/v9/wallhaven-v9w3v3.jpg" alt></p><p><img data-src="https://w.wallhaven.cc/full/m9/wallhaven-m9xlmy.jpg" alt></p><p><img data-src="https://w.wallhaven.cc/full/57/wallhaven-572k81.png" alt></p><p><img data-src="https://w.wallhaven.cc/full/72/wallhaven-72y2zo.jpg" alt></p><p><img data-src="https://w.wallhaven.cc/full/1k/wallhaven-1k9k83.png" style="zoom:50%;"></p><h2 id="注：（以上图均来自wallhaven）"><a href="#注：（以上图均来自wallhaven）" class="headerlink" title="注：（以上图均来自wallhaven）"></a>注：（以上图均来自<a href="https://wallhaven.cc">wallhaven</a>）</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;人物&quot;&gt;&lt;a href=&quot;#人物&quot; class=&quot;headerlink&quot; title=&quot;人物&quot;&gt;&lt;/a&gt;人物&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&quot;https://w.wallhaven.cc/full/j3/wallhaven-j3mk8y.jpg&quot; alt&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="壁纸" scheme="https://xd06.github.io/categories/%E5%A3%81%E7%BA%B8/"/>
    
    
    <category term="养眼" scheme="https://xd06.github.io/tags/%E5%85%BB%E7%9C%BC/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路(二)8-31</title>
    <link href="https://xd06.github.io/2022/08/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%BA%8C)8-31/"/>
    <id>https://xd06.github.io/2022/08/31/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%BA%8C)8-31/</id>
    <published>2022-08-30T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="可靠传输-—（8-30）"><a href="#可靠传输-—（8-30）" class="headerlink" title="可靠传输 —（8-30）"></a>可靠传输 —（8-30）</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><ol><li><p>使用差错检测技术（例如循环冗余校验CRC），接收方的数据链层就可以检测出帧在传输过程中是否产生了误码（比特差错）。</p></li><li><p>数据链层向其上层提供的服务类型</p><ul><li><p>不可靠传输服务：仅仅丢弃误码的帧，其他什么也不做</p></li><li><p>可靠传输服务：通过某种机制实现发送方发送什么，接收方最总终就能收到什么。</p></li></ul></li></ol><span id="more"></span><h2 id="传输差错的类型："><a href="#传输差错的类型：" class="headerlink" title="传输差错的类型："></a>传输差错的类型：</h2><ol><li>误码（比特差错）：出现在数据链路层及其下层</li><li>分组丢失     ——-&gt;</li><li>分组失序     ——-&gt;         出现在数据链路层的上层</li><li><p>分组重复     ——-&gt;</p></li><li><p>可靠传输服务并不局限于数据链路层，其他各层均可选择实现可靠传输。</p></li></ol><h2 id="实现机制"><a href="#实现机制" class="headerlink" title="实现机制"></a>实现机制</h2><ol><li>停止-等待（Stop-and-Wait,SW）协议</li></ol><ul><li>原理：收发双方通过因特网进行通信，首先发送方发送一个数据分组（DATA），接收方进行差错检测，确认无误码之后接受，并向接收方发送确认分组（ACK），发送方发送下一个数据分组，这次出现误码，接收方检测到误码后，直接丢弃，并向发送方发送否认分组（NAK），发送方收到之后重传之前的数据分组，再次重复前面的工作。</li><li>后面应对特殊的情况又增加了超时传输和确认丢失分组需要编号。</li></ul><script type="math/tex; mode=display">T^D是发送数据分组所消耗的发送时延，RTT是信号往返传播的时间，T^A是接收方发送确认分组消耗的时间\\\\信道利用率：U\approx\dfrac{T^D}{T^D+RTT+T^A}\quad TA<<T^D\quad\longrightarrow U\approx\dfrac{T^D}{T^D+RTT}\\\\RTT>>T^D \longrightarrow U很低，例如卫星链路的RTT很大\\\\ RTT<<T^D \longrightarrow U比较高，例如无线局域网的RTT远小于T^D</script><ul><li>列题：</li></ul><ol><li><p>回退N帧（Go-back-N,GBN）协议</p><ol><li>原理：使用流水线传输可以显著提高信道的利用率，并且利用发送窗口来限制发送方连续发送数据分组的数量，这是属于连续ARQ协议。</li><li>运行机制：发送方需要维护一个发送窗口W<sup>T</sup>，在没收到接收方确认分组的情况下，发送发可将序号落入W<sup>T</sup>内的所有数据分组连续发送出去。<ul><li>采用n个比特给分组编序号，W<sup>T</sup>的取值范围是1～（2<sup>n</sup>-1）.</li></ul></li></ol></li></ol><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><script type="math/tex; mode=display">   发送时延=\dfrac{发送分组大小（b）}{发送速率（b/s）}</script><ol><li>选择重传（Selective Repeat, SR）协议</li></ol><p>原理：哪一个分组没有正确接受就重新发送该分组。但是还是需要保证发送窗口W<sup>T</sup>的取值范围是1～（2<sup>n</sup>-1）。</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;可靠传输-—（8-30）&quot;&gt;&lt;a href=&quot;#可靠传输-—（8-30）&quot; class=&quot;headerlink&quot; title=&quot;可靠传输 —（8-30）&quot;&gt;&lt;/a&gt;可靠传输 —（8-30）&lt;/h1&gt;&lt;h2 id=&quot;相关概念&quot;&gt;&lt;a href=&quot;#相关概念&quot; class=&quot;headerlink&quot; title=&quot;相关概念&quot;&gt;&lt;/a&gt;相关概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用差错检测技术（例如循环冗余校验CRC），接收方的数据链层就可以检测出帧在传输过程中是否产生了误码（比特差错）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据链层向其上层提供的服务类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;不可靠传输服务：仅仅丢弃误码的帧，其他什么也不做&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可靠传输服务：通过某种机制实现发送方发送什么，接收方最总终就能收到什么。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-数据链路(一)8-30</title>
    <link href="https://xd06.github.io/2022/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%B8%80)8-30/"/>
    <id>https://xd06.github.io/2022/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF(%E4%B8%80)8-30/</id>
    <published>2022-08-29T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据链路（8-30）"><a href="#数据链路（8-30）" class="headerlink" title="数据链路（8-30）"></a>数据链路（8-30）</h1><h2 id="数据链路层在网络体系结构中所处的地位"><a href="#数据链路层在网络体系结构中所处的地位" class="headerlink" title="数据链路层在网络体系结构中所处的地位"></a>数据链路层在网络体系结构中所处的地位</h2><ul><li>数据链路层在五层协议的网络结构体系中处于第二层（自下而上）。</li></ul><p><img data-src="./1/sex.png" alt="This is an image"><br><span id="more"></span></p><h2 id="链路、数据链路和帧"><a href="#链路、数据链路和帧" class="headerlink" title="链路、数据链路和帧"></a>链路、数据链路和帧</h2><ul><li>链路（Link）是指从一个节点到相邻节点的一段物理线路（有线或无线），而中间没有任何其他的交换节点。</li><li>数据链路（Data Link）是基于链路的，当一条链路传输数据时，不仅需要链路本身，还需要有一些必要的通信协议来控制这些数据的传输，把实现这些协议的硬件和软件加到链路上，就构成了数据链路。</li><li>计算机中的网络适配器（网卡），和其相应软件驱动就实现了这些协议，一些网络适配器都包含了物理层和数据链路这两层的功能。</li></ul><p><img data-src="./1/sex.png" alt="替代文本" style="float:center;"></p><ul><li>帧是数据链路对等实体之间在水平方向上进行逻辑通信的协议数据单元。</li></ul><h2 id="数据链路的三个重要问题"><a href="#数据链路的三个重要问题" class="headerlink" title="数据链路的三个重要问题"></a>数据链路的三个重要问题</h2><p><strong>封装成帧和透明传输</strong></p><ol><li><p>封装成帧：是指在数据传输的过程中数据链路给上层交付下来的协议数据单元PDU添加一个首部和尾部，使之成为帧。</p><ol><li>帧的首部和尾部中包含着一些重要的控制信息。比如：目的地址、源地址、类型、FCS等。(不同类型的帧首部尾部所包含的可能不尽相同)</li></ol></li></ol><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/3.png)</p><ol><li>帧的尾部和首部的作用之一就是帧定界。(有些没有帧定界，比如以太网V2的MAC帧发送每一个帧会有一个帧间间隔，以这个间隔作为鉴定一个帧，而不是以头部和尾部作为帧定界)</li></ol><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/fzcz.png)</p><ol><li>透明传输：是指数据链路层对上层交付下来的协议单元PDU没有任何限制，就好像数据链路层不存在。</li></ol><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/fzcz.png)</p><ol><li><p>面向字节的物理链路使用的字节填充的方法实现透明传输，（一般原理方法）</p><p>使用转义符，消除数据中的“敏感字符”（比如转义符、帧定界符）</p></li></ol><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/byte.png)</p><ol><li>面向比特的物理链路使用比特填充的方法实现透明传输。（一般原理方法）通过在五个连续的比特1后面加入比特0，来消除数据中帧定界符的影响。再向上层交付时删除比特0即可。</li></ol><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/bite.png)</p><h1 id="真题"><a href="#真题" class="headerlink" title="真题"></a>真题</h1><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/12.png)</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/13.png)</p><p><strong>差错检测</strong></p><ul><li>实际的通信中是会出现各种差错的（称为比特差错）即比特1可能变成比特0，反之亦然</li><li>在一段时间内，传输错误的比特数量占所传输比特总数的比率称为误码率。</li><li>提高链路的信噪比，可以减低误码率。现实中是使用差错检测技术来检测是否出现比特差错。</li></ul><h4 id="在帧的尾部放一个检错码用来检测是否出现误码"><a href="#在帧的尾部放一个检错码用来检测是否出现误码" class="headerlink" title="在帧的尾部放一个检错码用来检测是否出现误码"></a><strong>在帧的尾部放一个检错码用来检测是否出现误码</strong></h4><p>​    1.奇偶校验<br><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/jo.png)</p><p>​    2.循环冗余校验</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan.png)</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan1.png)</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan2.png)</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan3.png)<br>例题:</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan4.png)</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan5.png)<br>以上两种的差错检测只能检测差错不能定位差错</p><p><img data-src="./计算机网络-数据链路(一" alt="This is an image">8-30.md/xunhuan6.png)<br><strong>可靠传输</strong></p><ul><li>不可传输服务：直接丢弃有误码的帧</li><li>可传输服务：实现发送方发送什么，接收方最终都能正确收到。（例如检测到误码后接受方向发送方发送重新传输的请求，直到接收方正确接收帧。）</li></ul><p>下一篇详细介绍可靠传输。</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据链路（8-30）&quot;&gt;&lt;a href=&quot;#数据链路（8-30）&quot; class=&quot;headerlink&quot; title=&quot;数据链路（8-30）&quot;&gt;&lt;/a&gt;数据链路（8-30）&lt;/h1&gt;&lt;h2 id=&quot;数据链路层在网络体系结构中所处的地位&quot;&gt;&lt;a href=&quot;#数据链路层在网络体系结构中所处的地位&quot; class=&quot;headerlink&quot; title=&quot;数据链路层在网络体系结构中所处的地位&quot;&gt;&lt;/a&gt;数据链路层在网络体系结构中所处的地位&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据链路层在五层协议的网络结构体系中处于第二层（自下而上）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&quot;./1/sex.png&quot; alt=&quot;This is an image&quot;&gt;&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络-物理层(二)8-29</title>
    <link href="https://xd06.github.io/2022/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82(%E4%BA%8C)8-29/"/>
    <id>https://xd06.github.io/2022/08/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82(%E4%BA%8C)8-29/</id>
    <published>2022-08-29T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-编码与调制的基本概念"><a href="#1-编码与调制的基本概念" class="headerlink" title="1.编码与调制的基本概念"></a>1.编码与调制的基本概念</h2><ul><li><p>编码（基带调试）：是对数字基带的波形进行变换，使其能够与信道特性相适应，是把数字信号转换成另一种数字信号</p></li><li><p>调制（带通）：是将数字基带信号的频率范围搬移到较高的频段，转换成模拟信号，并使其能够在模拟信道中传输。</p><span id="more"></span> </li><li><p>码元：在使用时间域的波形表示信号时，代表不同的离散数值的基本波形称为码元。</p></li></ul><h2 id="2-常用的编码方式"><a href="#2-常用的编码方式" class="headerlink" title="2.常用的编码方式"></a>2.常用的编码方式</h2><ul><li><p>双极性不归零编码：需要给收发双方再添加一条时钟信号线，在收发数据的同时，还要接收发送时钟信号。按照接收发送的时钟信号的节拍，来采样确定码元的个数。但是实际上，对于计算机网络利用这根传输线，宁愿传输数据信号而不会传输时钟信号。</p></li><li><p>双极性归零编码：信号在每个码元期间会回归到零电平，接收方只要在信号归零后采样即可。采用归零编码的信号，被称为”自同步信号“。</p></li><li><p>曼彻斯特编码：曼彻斯特编码。是在码元的中间时段进行电平跳变。既可让正跳变表示表示0也可表示1，可以自行定义.（属于自同步信号）</p></li><li><p>差分曼特斯编码：在码元的中间时段进行跳变仅表示时钟信号而不表示数据。数据的表示在于每一个码元开始处是否有电平跳变，只要跳变则为0，不跳变则是1.</p></li></ul><p>真题：</p>  <h2 id="3-基本的带通调制方法和混合调制方法"><a href="#3-基本的带通调制方法和混合调制方法" class="headerlink" title="3.基本的带通调制方法和混合调制方法"></a>3.基本的带通调制方法和混合调制方法</h2><ul><li>相位和振幅：通常情况下，载波的相位和振幅可以结合起来一起调制，例如正交振幅调制Q.</li></ul><h2 id="信道的极限容量"><a href="#信道的极限容量" class="headerlink" title="信道的极限容量"></a>信道的极限容量</h2><ol><li>造成信号失真的主要因素</li></ol><h3 id="奈氏准测"><a href="#奈氏准测" class="headerlink" title="奈氏准测"></a>奈氏准测</h3><ul><li>码元传输速率又称为波特率、调制速率、波形速率或符号速率。</li><li>波特率与比特率有一定的关系：<ol><li>当一个码元只携带1比特的信息量时，波特率（码元/秒）与比特率（比特/秒）在数值上是相等的。</li><li>当1个码元只携带n个比特的信息量时，波特率（码元/秒）转换成比特率（比特/秒）时，数值是要乘以n.</li></ol></li></ul><h3 id="香农公式"><a href="#香农公式" class="headerlink" title="香农公式"></a>香农公式</h3><h2 id="真题"><a href="#真题" class="headerlink" title="真题"></a>真题</h2><h2 id="信道复用技术"><a href="#信道复用技术" class="headerlink" title="信道复用技术"></a>信道复用技术</h2><p>​</p><ul><li><p>常用的信道复用技术</p><ol><li>频分复用FDM<ul><li>将传输媒体的总信道划分成多个子信道，每个子频带所为一个子信道，每个用户使用一个子信道进行通讯，各自信道之间会留出隔离频带防止个子信道之间干扰，频分复用的所有用户同时占有不同的频带资源发送数据。</li></ul></li><li>时分复用TDM<ul><li>时分复用的所有用户在不同的时间占用同样的频带。</li></ul></li><li>波分复用WDM</li></ol></li></ul><ol><li><p>码分复用CDM</p><ul><li><p>码分复用常称为码分多址，它是在扩频通信技术的基础上发展的一种无线通信技术。</p></li><li><p>与FDM和TDM不同，CDMA的每个用户可以在相同的时间使用相同的频带进行通信。</p></li><li><p>CDMA最初用于军事通信，这种系统发射的信号有很强的抗干扰能力，其频道类似于白噪声，不宜让敌人发现。</p></li></ul></li></ol><pre><code> * 分给每个站的码片序列必须各不相同，实际常采用的是伪随机码序列。 * 分配给每个站的码片序列必须相互正交，即各码片序列相应的码片向量之间的规格化内积为0.</code></pre><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a><strong>注：</strong>（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-编码与调制的基本概念&quot;&gt;&lt;a href=&quot;#1-编码与调制的基本概念&quot; class=&quot;headerlink&quot; title=&quot;1.编码与调制的基本概念&quot;&gt;&lt;/a&gt;1.编码与调制的基本概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编码（基带调试）：是对数字基带的波形进行变换，使其能够与信道特性相适应，是把数字信号转换成另一种数字信号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调制（带通）：是将数字基带信号的频率范围搬移到较高的频段，转换成模拟信号，并使其能够在模拟信道中传输。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络体系-物理层（8-28）</title>
    <link href="https://xd06.github.io/2022/08/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82(%E4%B8%80)8-28/"/>
    <id>https://xd06.github.io/2022/08/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82(%E4%B8%80)8-28/</id>
    <published>2022-08-28T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络-物理层"><a href="#计算机网络-物理层" class="headerlink" title="计算机网络-物理层"></a>计算机网络-物理层</h1><h3 id="1-物理层功能"><a href="#1-物理层功能" class="headerlink" title="1.物理层功能"></a>1.物理层功能</h3><ul><li><p>物理层的功能是在各种传输媒体上传输比特0和1，给上层提供“透明”传输比特流。<strong>（透明的意思是数据链路层看不见，也无需看见物理层究竟使用的是什么方法来传递比特流。数据链路只用享受物理层提供的比特流传输服务即可）</strong></p></li></ul><span id="more"></span><h3 id="2-物理层接口特性"><a href="#2-物理层接口特性" class="headerlink" title="2.物理层接口特性"></a>2.物理层接口特性</h3><ul><li>机械特性</li><li>电气特性</li><li>功能特性</li><li>过程特性</li></ul><h2 id="物理层下面的传输媒体"><a href="#物理层下面的传输媒体" class="headerlink" title="物理层下面的传输媒体"></a>物理层下面的传输媒体</h2><ol><li>传输媒体是计算机网络设备之间的物理通路，也称为传输介质或传输媒介。</li><li>传输媒体并不包括在计算机网络体系中。</li></ol><ul><li><p>传输媒体的分类 </p><ol><li>导向型传输媒体<ol><li>同轴电缆</li></ol></li></ol></li></ul><pre><code> 2.  双绞线</code></pre> <pre><code> 3. 光纤</code></pre><ol><li>非导向型传输媒体<ol><li>无线电波 1.以地面波的形式在地球表面传播。依靠电离层的反射再回到地球表面。</li><li>红外线 <ol><li>红外通信的特点（点对点无线传输、直线传播，中间不能有障碍物，传输距离短、传输速率低）</li></ol></li><li>微波 空间直线传播，会穿透电离层进入宇宙空间常用方式（地面微波接力通信和卫星传播）</li><li>激光 （大气激光通信和光纤通信）</li><li>可见光。可见光通信-今后的热点。</li></ol></li></ol><h2 id="传输方式"><a href="#传输方式" class="headerlink" title="传输方式"></a>传输方式</h2><ol><li><p>串行传输和并行传输（数据以比特为单位传输）</p><ul><li>串行传输：在发送端和接收端之间的数据传输线路上逐比特的依次传输。</li></ul></li></ol><ul><li><p>并行传输：在发送端和接收端之间的有多条数据传输线路，多个比特安排在各个线路同时传输。</p><p>对误差的修正：</p></li></ul><ol><li><p>同步传输和异步传输</p><ul><li>同步传输：数据块以比特流的方式传输，字节之间没有间隔，也没有起始位。接收方在比特信号的中间时刻进行采样，以判别是比特1还是比特0，这就要求收发双方对表示比特信号的时间长度达成一致，即是同步。</li></ul></li></ol><ul><li>异步传输（数据以字节为单位传输）</li></ul><ol><li>单向通信、双向交替通信和双向同时通信</li></ol><p>   注：(单工电台的单工通信表示的<strong>是双向交替通信</strong>，<strong>不是单向通信</strong>)</p><h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;计算机网络-物理层&quot;&gt;&lt;a href=&quot;#计算机网络-物理层&quot; class=&quot;headerlink&quot; title=&quot;计算机网络-物理层&quot;&gt;&lt;/a&gt;计算机网络-物理层&lt;/h1&gt;&lt;h3 id=&quot;1-物理层功能&quot;&gt;&lt;a href=&quot;#1-物理层功能&quot; class=&quot;headerlink&quot; title=&quot;1.物理层功能&quot;&gt;&lt;/a&gt;1.物理层功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;物理层的功能是在各种传输媒体上传输比特0和1，给上层提供“透明”传输比特流。&lt;strong&gt;（透明的意思是数据链路层看不见，也无需看见物理层究竟使用的是什么方法来传递比特流。数据链路只用享受物理层提供的比特流传输服务即可）&lt;/strong&gt;&lt;/p&gt;

&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络体系（8-27）</title>
    <link href="https://xd06.github.io/2022/08/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E5%88%86%E5%B1%82%E6%80%9D%E6%83%B3(8-27)/"/>
    <id>https://xd06.github.io/2022/08/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E5%88%86%E5%B1%82%E6%80%9D%E6%83%B3(8-27)/</id>
    <published>2022-08-27T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="3-分层思想"><a href="#3-分层思想" class="headerlink" title="3.分层思想"></a>3.分层思想</h3><ul><li>用户在主机中使用浏览器访问web服务器，主机会向WEB服务器发送一个请求报文，web服务器收到报文后，执行相关操作，向主机发送响应报文，接收后由浏览器负责解析和渲染显示。（简化示意过程）<span id="more"></span></li></ul><ol><li><p>从应用层开始，主机中的应用层。根据HTTP协议，构建HTTP请求报文。然后向下传递交付给运输层，而运输层给HTTP请求报文添加一个TCP首部，将其封装成TCP报文段（区分应用进程，实现可靠传输），运输层将封装好的报文段向下交给网络层，而网络层将添加IP头，封装成IP数据报（ip寻址和路由），再向下交付给链路层，而链路层会给报文添加一个头部和一个尾部，将其封装成帧（又称以太帧，MAC和帧校验），再向下到物理层将其转换成电信号发送给路由器，</p></li><li><p>路由器逐层向上去掉所增加的头部尾部，到达网络层之后，会提取处该报文的ip，此时路由器会根据IP地址查表转发该ip数据报，确定后又向下逐层封装，发送到指定IP地址的web服务器，再次逐层向上去掉相应的头部尾部，到达网络层之后又进行发送响应报文，然后重复此过程，到达主机的应用层被浏览器解析和渲染。</p></li></ol><h3 id="4-专用术语"><a href="#4-专用术语" class="headerlink" title="4.专用术语"></a>4.专用术语</h3><h4 id="1-实体"><a href="#1-实体" class="headerlink" title="1.实体"></a>1.实体</h4><ul><li><p>实体是指任何可发送或接受信息的硬件或软件进程。</p></li><li><p>对等实体是指通信双方相同层次中的实体</p></li></ul><h4 id="2-协议"><a href="#2-协议" class="headerlink" title="2. 协议"></a>2. 协议</h4><ul><li><p>协议是控制两个对等实体在”水平方向“进行”逻辑通信“的规则的集合。</p></li><li><p>协议的三要素</p><ol><li>语法 定义所交换信息的格式</li><li>语义 定义通信双方所要完成的操作</li><li>同步 定义双方的时序关系</li></ol></li></ul><h4 id="3-服务"><a href="#3-服务" class="headerlink" title="3.服务"></a>3.服务</h4><ul><li><p>在协议的控制下，两个对等实体在水平方向上的逻辑通信使得本层能够像上一层提供服务。</p></li><li><p>要实现本层协议，还需要使用下面一层所提供的服务</p></li></ul><ul><li><p>在同一系统中相邻的两层实体交换信息的逻辑接口成为服务访问点SAP，它被用于区分不同的服务类型。</p></li><li><p>上层使用下层所提供的服务，必须通过与下层交换一些命令，这些命令称为服务原语。</p></li></ul><ul><li>对等层次之间传送的数据包称为该层的协议数据单元（PDU）.</li></ul><h1 id="第一章思维导图"><a href="#第一章思维导图" class="headerlink" title="第一章思维导图"></a>第一章思维导图</h1> <h2 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h2>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;3-分层思想&quot;&gt;&lt;a href=&quot;#3-分层思想&quot; class=&quot;headerlink&quot; title=&quot;3.分层思想&quot;&gt;&lt;/a&gt;3.分层思想&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用户在主机中使用浏览器访问web服务器，主机会向WEB服务器发送一个请求报文，web服务器收到报文后，执行相关操作，向主机发送响应报文，接收后由浏览器负责解析和渲染显示。（简化示意过程）&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>又是一个不眠之夜</title>
    <link href="https://xd06.github.io/2022/08/27/%E5%8F%88%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%8D%E7%9C%A0%E4%B9%8B%E5%A4%9C/"/>
    <id>https://xd06.github.io/2022/08/27/%E5%8F%88%E6%98%AF%E4%B8%80%E4%B8%AA%E4%B8%8D%E7%9C%A0%E4%B9%8B%E5%A4%9C/</id>
    <published>2022-08-26T22:13:25.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了……"><a href="#晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了……" class="headerlink" title="晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了……."></a>晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了…….</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了……&quot;&gt;&lt;a href=&quot;#晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了……&quot; class=&quot;headerlink&quot; title=&quot;晚上遇到一个麻烦的问题，想着解决就睡觉，结果天就亮了…….&quot;&gt;&lt;/a&gt;晚</summary>
      
    
    
    
    
    <category term="日常" scheme="https://xd06.github.io/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络性能和体系结构（8.26）</title>
    <link href="https://xd06.github.io/2022/08/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E5%92%8C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%EF%BC%888.26%EF%BC%89/"/>
    <id>https://xd06.github.io/2022/08/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD%E5%92%8C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%EF%BC%888.26%EF%BC%89/</id>
    <published>2022-08-25T16:00:00.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络性能和体系结构（8-26）"><a href="#计算机网络性能和体系结构（8-26）" class="headerlink" title="计算机网络性能和体系结构（8.26）"></a>计算机网络性能和体系结构（8.26）</h1><h1 id="一、计算机网络性能"><a href="#一、计算机网络性能" class="headerlink" title="一、计算机网络性能"></a>一、计算机网络性能</h1><h3 id="1-速率"><a href="#1-速率" class="headerlink" title="1.速率"></a>1.速率</h3><ul><li>比特（bit,记为小写b）是计算机中数据量的基本单位，一个比特就是二进制数字中的1或0.</li><li>数据量的常用单位有字节（byte,记为大写B)、千字节（KB)、兆字节（MB）、吉字节(GB)以及太字节(TB).<span id="more"></span></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">数据量的单位</th><th>换算关系</th></tr></thead><tbody><tr><td style="text-align:center">比特</td><td>基本单位</td></tr><tr><td style="text-align:center">字节</td><td>1B=8bit</td></tr><tr><td style="text-align:center">千字节</td><td>KB=2<sup>10</sup>B</td></tr><tr><td style="text-align:center">兆字节</td><td>MB=K*KB=2<sup>20</sup>B</td></tr><tr><td style="text-align:center">吉字节</td><td>GB=K*MB=2<sup>30</sup>B</td></tr><tr><td style="text-align:center">太字节</td><td>TB=K*GB=2<sup>40</sup>B</td></tr></tbody></table></div><ul><li><p>速率是指数据的传输速率(即每秒钟传送多少个比特),也称为数据率或者比特率。</p></li><li><p>速率的基本单位是比特/秒（bit/s,可以简写b/s,或者bps,即bit per second）。速率的常用单位有千比特/秒、兆比特/秒、吉比特/秒、以及太比特/秒.</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">数据量的单位</th><th>换算关系</th></tr></thead><tbody><tr><td style="text-align:center">比特/秒</td><td>基本单位</td></tr><tr><td style="text-align:center">千比特/秒</td><td>kb/s=10<sup>3</sup>b/s</td></tr><tr><td style="text-align:center">兆比特/秒</td><td>Mb/s=K*Kb/s=10<sup>6</sup>b/s</td></tr><tr><td style="text-align:center">吉比特/秒</td><td>Gb/s=k*Mb/s=10<sup>9</sup>b/s</td></tr><tr><td style="text-align:center">太比特/秒</td><td>Tb/s=K*Gb/s=10<sup>12</sup>b/s</td></tr></tbody></table></div><ul><li>数据量单位中的K、 M、G、T的数值分别为2<sup>10</sup>、2<sup>20</sup>、 2 <sup>30</sup>、2 <sup>40</sup>.</li><li>速率单位中的K、M、 G、T的数值分别为10<sup>3</sup>、10<sup>6</sup>、10<sup>9</sup>、10<sup>12</sup>。</li></ul><h5 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h5><ol><li><h5 id="有一个待发送的数据块大小为100MB，网卡的发送速率为100-Mbps，则网卡的发送完该数据会需要多少时间？"><a href="#有一个待发送的数据块大小为100MB，网卡的发送速率为100-Mbps，则网卡的发送完该数据会需要多少时间？" class="headerlink" title="有一个待发送的数据块大小为100MB，网卡的发送速率为100 Mbps，则网卡的发送完该数据会需要多少时间？"></a>有一个待发送的数据块大小为100MB，网卡的发送速率为100 Mbps，则网卡的发送完该数据会需要多少时间？</h5></li></ol><script type="math/tex; mode=display">解：\dfrac{100MB}{100Mb/s}=\dfrac{2^{20}\times8b}{10^6b/s}=8.388608s</script><h3 id="2-带宽"><a href="#2-带宽" class="headerlink" title="2.带宽"></a>2.带宽</h3><ol><li>带宽在模拟信号中的意义☞某个信号所包含的各种不同频率的成分所占的频率范围。</li></ol><ul><li>单位 Hz （kHz MHz GHz）</li></ul><ol><li>带宽在计算机网络中的意义表示的是网络通信线路所能传输数据的能力即单位时间内从网络某一点到另一点所通过的<strong>最高数据率</strong>.</li></ol><ul><li>单位和前面的速率相同</li></ul><ol><li>数据传送速率=min[主机接口速率、线路带宽、交换机或路由器接口速率]</li></ol><h3 id="3-吞吐量"><a href="#3-吞吐量" class="headerlink" title="3.吞吐量"></a>3.吞吐量</h3><ul><li>吞吐量是指在单位时间内通过某个网络或接口的实际数据量，吞吐量常被用于实际网络的测量，以便获得知道有多少个数据通过了网络。</li><li>吞吐量受网络带宽的限制。</li></ul><h3 id="4-时延"><a href="#4-时延" class="headerlink" title="4.时延"></a>4.时延</h3><ul><li>时延是指数据从网络的一端传向另一端所消耗的时间，也称为延迟或者迟延。数据可有一个或多个分组，甚至一个比特构成。</li></ul><script type="math/tex; mode=display">时延的组成：\\发送时延=\dfrac{分组长度（b）}{发送速率（b/s）}\\\qquad传播时延=\dfrac{信道长度（m）}{信号传播速率（m/s）}\\排队时延（不方便计算）\\处理时延（不方便计算）\\需要的最小时长=所有分组的发送时延+传播时延+中间的转发时延</script><h3 id="5-时延带宽积"><a href="#5-时延带宽积" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><ol><li>主机A和B之间采用光纤链路链路的长是1千米。链路带宽为1 GB/秒。请计算该链路的时延带宽积。<script type="math/tex; mode=display">时延带宽积={传播时延\times带宽=\dfrac{1Km}{2\times10^8m/s}} \times1Gb/s=5000b</script></li></ol><ul><li>此时的时延带宽积也称为以比特为单位的链路长度。</li></ul><h3 id="6-往返时间"><a href="#6-往返时间" class="headerlink" title="6.往返时间"></a>6.往返时间</h3><ol><li>往返时间是从发送端发送数据分组开始。到发送端收到接收端发来的相应确认分组为止，所总共消耗的时间。</li></ol><h3 id="7-利用率"><a href="#7-利用率" class="headerlink" title="7.利用率"></a>7.利用率</h3><ol><li><p>链路利用率：链路利用率是指某条链路由百分之几的时间是被利用，（即有数据通过）完全空闲的链路利用率为0。</p></li><li><p>网络利用率：网络利用率是指网络中所有链路的利用率的加权平均。</p><script type="math/tex; mode=display">D_0表示网络空闲时的时延,D的表示网络当前的时延，\\U表示网络利用率，那么在理想的情况下。\\D=\dfrac{D_0}{1-U}</script></li></ol><h3 id="8-丢包率"><a href="#8-丢包率" class="headerlink" title="8.丢包率"></a>8.丢包率</h3><ul><li><p>丢包率是指在一定时间范围内传输过程中丢失的分组数量与总分组数量的比率。</p></li><li><p>分组丢失的两种情况。</p><p>​     1.传输过程中出现误码被丢弃</p><p>​     2.第二节点交换机根据丢弃的策略主动丢弃</p></li></ul><h2 id="二、体系结构"><a href="#二、体系结构" class="headerlink" title="二、体系结构"></a>二、体系结构</h2><ul><li>IP协议可以为各种网络应用提供服务（Everything over IP）</li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">osi参考模型</th><th>Tcp/ip参考模型</th><th>原理参考模型</th></tr></thead><tbody><tr><td style="text-align:center">应用层</td><td>应用层</td><td>应用层</td></tr><tr><td style="text-align:center">表示层</td><td>运输层</td><td>运输层</td></tr><tr><td style="text-align:center">会话层</td><td>网际层</td><td>网际层</td></tr><tr><td style="text-align:center">运输层</td><td>网络接口层</td><td>数据链路层</td></tr><tr><td style="text-align:center">网络层</td><td></td><td>物理层</td></tr><tr><td style="text-align:center">数据链路层</td><td></td><td></td></tr><tr><td style="text-align:center">物理层</td><td></td></tr></tbody></table></div><h3 id="1-网络体系分层的必要性"><a href="#1-网络体系分层的必要性" class="headerlink" title="1.网络体系分层的必要性"></a>1.网络体系分层的必要性</h3><ul><li>解决通过应用进程的交互来实现特定的网络应用的问题——应用层</li><li>解决进程之间基于网络的通信问题——运输层</li><li>解决数据包在多个网络之间传输和路由的问题——网络层</li><li>解决数据包在一个网络或一段链路上传输的问题——数据链路层</li><li>解决使用何种信号来表示比特0和1的问题——物理层</li></ul><h1 id="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络"><a href="#注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络" class="headerlink" title="注：（以上内容来自中国MOOC慕课湖南科技大学计算机网络)"></a>注：（以上内容来自<a href="https://www.icourse163.org/learn/HNKJ-1461816178?tid=1468294445#/learn/announce">中国MOOC慕课湖南科技大学计算机网络</a>)</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;计算机网络性能和体系结构（8-26）&quot;&gt;&lt;a href=&quot;#计算机网络性能和体系结构（8-26）&quot; class=&quot;headerlink&quot; title=&quot;计算机网络性能和体系结构（8.26）&quot;&gt;&lt;/a&gt;计算机网络性能和体系结构（8.26）&lt;/h1&gt;&lt;h1 id=&quot;一、计算机网络性能&quot;&gt;&lt;a href=&quot;#一、计算机网络性能&quot; class=&quot;headerlink&quot; title=&quot;一、计算机网络性能&quot;&gt;&lt;/a&gt;一、计算机网络性能&lt;/h1&gt;&lt;h3 id=&quot;1-速率&quot;&gt;&lt;a href=&quot;#1-速率&quot; class=&quot;headerlink&quot; title=&quot;1.速率&quot;&gt;&lt;/a&gt;1.速率&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;比特（bit,记为小写b）是计算机中数据量的基本单位，一个比特就是二进制数字中的1或0.&lt;/li&gt;
&lt;li&gt;数据量的常用单位有字节（byte,记为大写B)、千字节（KB)、兆字节（MB）、吉字节(GB)以及太字节(TB).&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="机网" scheme="https://xd06.github.io/categories/%E6%9C%BA%E7%BD%91/"/>
    
    
    <category term="网络" scheme="https://xd06.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>分享壁纸(一)</title>
    <link href="https://xd06.github.io/2022/08/25/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%B8%80)/"/>
    <id>https://xd06.github.io/2022/08/25/%E5%88%86%E4%BA%AB%E5%A3%81%E7%BA%B8(%E4%B8%80)/</id>
    <published>2022-08-25T08:44:44.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分享几张好看的图片"><a href="#分享几张好看的图片" class="headerlink" title="分享几张好看的图片"></a>分享几张好看的图片</h1> <span id="more"></span><p><img data-src="https://w.wallhaven.cc/full/8o/wallhaven-8old52.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/z8/wallhaven-z8lgwg.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/9m/wallhaven-9mqqq8.png" alt><br><img data-src="https://w.wallhaven.cc/full/6o/wallhaven-6oveq7.png" alt><br><img data-src="https://w.wallhaven.cc/full/28/wallhaven-285e6x.png" alt><br><img data-src="https://w.wallhaven.cc/full/x8/wallhaven-x83jkv.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/pk/wallhaven-pke293.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/1k/wallhaven-1k961v.png" alt><br><img data-src="https://w.wallhaven.cc/full/rd/wallhaven-rdkke7.png" alt><br><img data-src="https://w.wallhaven.cc/full/y8/wallhaven-y8z7wx.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/96/wallhaven-96w8e8.png" alt><br><img data-src="https://w.wallhaven.cc/full/pk/wallhaven-pkgkkp.png" alt><br><img data-src="https://w.wallhaven.cc/full/l3/wallhaven-l3zmwy.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/ym/wallhaven-ymz61d.jpg" alt><br><img data-src="https://w.wallhaven.cc/full/j3/wallhaven-j3m8y5.png" alt><br>注：（取自<a href="https://www.wallhaven.cc">wallhaven</a>你懂的)</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;分享几张好看的图片&quot;&gt;&lt;a href=&quot;#分享几张好看的图片&quot; class=&quot;headerlink&quot; title=&quot;分享几张好看的图片&quot;&gt;&lt;/a&gt;分享几张好看的图片&lt;/h1&gt;</summary>
    
    
    
    <category term="壁纸" scheme="https://xd06.github.io/categories/%E5%A3%81%E7%BA%B8/"/>
    
    
    <category term="养眼" scheme="https://xd06.github.io/tags/%E5%85%BB%E7%9C%BC/"/>
    
  </entry>
  
  <entry>
    <title>开端</title>
    <link href="https://xd06.github.io/2022/08/24/%E5%BC%80%E7%AB%AF/"/>
    <id>https://xd06.github.io/2022/08/24/%E5%BC%80%E7%AB%AF/</id>
    <published>2022-08-24T08:54:12.000Z</published>
    <updated>2025-02-15T22:27:05.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nbsp-nbsp-nbsp-一切事都是有始有终！而这件事从这儿开始"><a href="#nbsp-nbsp-nbsp-一切事都是有始有终！而这件事从这儿开始" class="headerlink" title="&nbsp;&nbsp;&nbsp;一切事都是有始有终！而这件事从这儿开始"></a>&nbsp;&nbsp;&nbsp;一切事都是有始有终！而这件事从这儿开始</h1><span id="more"></span><h1 id="这个博客正式成立了！"><a href="#这个博客正式成立了！" class="headerlink" title="这个博客正式成立了！"></a>这个博客正式成立了！</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;nbsp-nbsp-nbsp-一切事都是有始有终！而这件事从这儿开始&quot;&gt;&lt;a href=&quot;#nbsp-nbsp-nbsp-一切事都是有始有终！而这件事从这儿开始&quot; class=&quot;headerlink&quot; title=&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;一切事都是有始有终！而这件事从这儿开始&quot;&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;一切事都是有始有终！而这件事从这儿开始&lt;/h1&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
